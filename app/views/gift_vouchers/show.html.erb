<div class="ui container">
  <h2 class="ui dividing header">Gift Voucher</h2>
  <div class="ui fluid form raised segment">
    <div class="two fields">
      <div class="inline field">
        <label>Gift:&nbsp;&nbsp;&nbsp;</label>
        <%= @gift_voucher.name %>
      </div>
      <div class="inline field">
        <label>Status:&nbsp;&nbsp;&nbsp;</label>
        <%= @gift_voucher.status.humanize %>
      </div>
    </div>
    <div class="two fields">
      <div class="inline field">
        <label>Sender:&nbsp;&nbsp;&nbsp;</label>
        <%= @gift_voucher.from_user_text %>
      </div>
      <div class="inline field">
        <label>Addressed To:&nbsp;&nbsp;&nbsp;</label>
        <%= @gift_voucher.to_user_text %>
      </div>
    </div>
    <div class="field">
      <div class="ui icon message">
        <i class="comment icon"></i>
        <div class="content">
          <div class="header">Message</div>
          <p><%= @gift_voucher.message %></p>
        </div>
      </div>
    </div>
  </div>
  <div class="ui hidden divider"></div>
  <div class="ui four doubling cards">
    <% @gift_voucher.gift_voucher_items.includes(:product).each do |item| %>
      <%= render 'gift_voucher_item_card', :card_gift_voucher_item => item %>
    <% end %>
  </div>
  <div class="ui hidden divider"></div>
  <%= link_to @gift_voucher.order.nil? ? gift_vouchers_path : @gift_voucher.order.becomes(Order), class: 'ui secondary labeled icon button' do |lnk| %>
    <i class="left arrow icon"></i>
    Back
  <% end %>
  <% if @gift_voucher.status != 'claimed' %>
    <%= form_for @basket.becomes(Order), html: {class: 'ui form', style: 'display: inline-block; padding: 0; margin: 0'} do |f| %>
      <%= f.hidden_field :gift_voucher_id, value: @gift_voucher.id %>
      <%= button_tag(type: 'submit', class: 'ui labeled blue icon button') do |btn| %>
        Apply to Basket!
        <i class="gift icon"></i>
      <% end %>
    <% end %>
  <% end %>
</div>